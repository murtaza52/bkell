
<project name="bkell-clj" default="usage" basedir=".">
	
	
    <property name="ant.build.javac.target" value="1.5" />
	
    
	<path id="bookkeeping.classpath">
		<pathelement path="${dir.build}/gen" />
		<pathelement path="${dir.build}/src" />
		<pathelement path="${dir.build}/test" />
		<pathelement path="lib/" />
		<pathelement path="xml/" />
		<pathelement path="xml/http/" />
		<pathelement path="test/xml/" />
		<pathelement path="test/xml/http/" />
		<pathelement path="." />
		<fileset dir="lib">
		    <include name="**/*.jar" />
		    <include name="**/*.properties"/>
		</fileset>
		<fileset dir="${java.home}/lib" >
		    <include name="**/*.jar"/>
		</fileset>
	</path>
	
	
    
    <!-- =============================== -->
    <!-- TASK DEFINITIONS		-->
    <!-- =============================== -->
    <taskdef name="if" classpathref="bookkeeping.classpath" classname="ise.antelope.tasks.IfTask"/>
    <taskdef name="sablecc" classpathref="bookkeeping.classpath" classname="org.sablecc.ant.taskdef.Sablecc"/>


    <!-- =============================== -->
    <!-- INITIALIZE THE BUILD PROCESS    -->
    <!-- =============================== -->
    <target name="init" >
		<loadproperties srcFile="build.properties" />
    </target>


    <!-- =============================== -->
    <!-- CREATE the generated java files -->
    <!-- =============================== -->
    <target name="run-gen" >
		
		<available file="gen/" property="genExists" />
		<if name="genExists">
			
		    <else>
				
		    	<mkdir dir="gen/"/>
		    	
		    	<!-- BOB GENERATION --> 
				<java classname="com.interrupt.bob.Main" classpathref="bookkeeping.classpath" fork="yes" >
		    		
					<!-- <arg line="-gen gen -base . -end .xml -def ${xml.files} -sys ${system.files}" /> --> 
					<arg line="-gen gen -base . -end .xml -def 'xml/bookkeeping.2.bookkeeping.xml xml/bookkeeping.2.transactions.xml xml/bookkeeping.2.users.xml xml/bookkeeping.authorise.xml xml/bookkeeping.system.xml xml/bookkeeping.debitPointers.xml test/xml/test.currencies.xml test/xml/test.currencies.badpointers.xml xml/logs.xml' -sys 'xml/bookkeeping.2.bookkeeping.xml xml/bookkeeping.2.transactions.xml xml/bookkeeping.2.users.xml xml/bookkeeping.authorise.xml xml/bookkeeping.system.xml xml/bookkeeping.debitPointers.xml test/xml/test.currencies.xml test/xml/test.currencies.badpointers.xml xml/logs.xml'" />
				</java>
		    	
		    </else>
		</if>
    </target>
    
    
    <!-- =============================== -->
    <!-- COMPILE targets		 -->
    <!-- =============================== -->
    <target name="compile-all" depends="init,run-gen,compile-src"/>
	
    <target name="compile-src" depends="init,compile-gen">
		
		<echo message="COMPILING JAVA SOURCE"/>
		<mkdir dir="${dir.build}/src"/>
		
		<javac srcdir="${dir.src}" destdir="${dir.build}/src" debug="true" fork="yes" >
			
			<classpath>
				<pathelement path="${dir.build}/test" />
				<pathelement path="${dir.build}/gen" />
				<pathelement path="${dir.build}/src" />
				<pathelement path="xml" />
				<fileset dir="${java.home}/lib" >
					<include name="**/*.jar"/>
				</fileset>
				<fileset dir="lib">
					<include name="**/*.jar" />
					<include name="**/*.properties"/>
				</fileset>
			</classpath>
		</javac>
		
    </target>
	
    <target name="compile-gen" depends="init,run-gen,run-cc">
		
    	
		<!-- copy over Token with a toString() that doesn't add extra stuff 
		<copy todir="gen/com/interrupt/bookkeeping/cc/node/" overwrite="true"> 
			<fileset file="src/com/interrupt/bookkeeping/cc/node/Token.java" /> 
		</copy> 
	       -->
		
		<echo message="COMPILING GEN SOURCE"/>
		<mkdir dir="${dir.build}/gen"/>
		<javac srcdir="gen" destdir="${dir.build}/gen" fork="yes" debug="true" deprecation="on" >
			
			<classpath>
				<pathelement path="${dir.build}/src" />
				<pathelement path="${dir.build}/test" />
				<fileset dir="${java.home}/lib" >
				    <include name="**/*.jar"/>
				</fileset>
				<fileset dir="lib">
				    <include name="**/*.jar" />
				    <include name="**/*.properties"/>
				</fileset>
		    </classpath>
		</javac>
		
		
		<!-- copy over SableCC dat files -->
		<copy todir="${dir.build}/gen" > 
			<fileset dir="gen" includes="**/*.dat" />
		</copy> 
		
    </target>
    
	
	<target name="run-cc" depends="init"> 
		
	       <available file="gen/com/interrupt/bookkeeping/cc/analysis" property="ccExists" />
		<if name="ccExists">
			
		    <else>
		    	<mkdir dir="gen" />
		    	<sablecc src="etc/cc" outputdirectory="gen" includes="*.cc" />
		    	
		    	<!-- need to hack the lexer code and there's no easy way to sub-type -->
		    	<copy todir="gen/com/interrupt/bookkeeping/cc/lexer/" overwrite="true"> 
    				<fileset file="gen/Lexer.java" /> 
    			</copy> 
				
		    </else>
		</if>
	</target>
	
	
	
    <target name="run-docs" depends="compile-gen" >
	
	<javadoc destdir="doc/api" 
	    windowtitle="Bookkeeping API" 
	    sourcepath="src/:gen/"
	    classpathref="bookkeeping.classpath" >

	    <package name="com.interrupt.bookkeeping" />
	    <package name="com.interrupt.bookkeeping.account" />
	    <package name="com.interrupt.bookkeeping.action" />
		
		<package name="com.interrupt.bookkeeping.cc" />
		<package name="com.interrupt.bookkeeping.cc.bkell" />
		<package name="com.interrupt.bookkeeping.cc.bkell.command" />
		<package name="com.interrupt.bookkeeping.cc.executor" />
		<package name="com.interrupt.bookkeeping.cc.analysis" />
		<package name="com.interrupt.bookkeeping.cc.lexer" />
		<package name="com.interrupt.bookkeeping.cc.parser" />
		<package name="com.interrupt.bookkeeping.cc.node" />
		
		<!-- DELETE 'node' package 
		<package name="com.interrupt.bookkeeping.cc.node" />
		--> 
		
		<package name="com.interrupt.bookkeeping.exception" />
	    <package name="com.interrupt.bookkeeping.http" />

		<!-- DELETE 'interpreter' package 
		<package name="com.interrupt.bookkeeping.interpreter" />
		--> 
		
	    <package name="com.interrupt.bookkeeping.journal" />
	    <package name="com.interrupt.bookkeeping.system" />
		<package name="com.interrupt.bookkeeping.users" />
		<package name="com.interrupt.bookkeeping.util" />
	    <package name="com.interrupt.bookkeeping.workflow" />
	    <package name="com.interrupt.persistence" />
	    <package name="com.interrupt.persistence.or" />
	    <package name="com.interrupt.persistence.xml" />
	</javadoc>
    </target>
    
    
    <!-- =============================== -->
    <!-- DEPLOY targets			-->
    <!-- =============================== -->
    
	<target name="release" depends="compile-src" >
		
		<!-- jar main classes. Jar dependencies and properties files should be zipped into a lib directory
		-->
		<jar destfile="${dir.build}/bookkeeping.jar" >
			
			<fileset dir="${dir.build}/gen" includes="**/*.class" />
			<fileset dir="${dir.build}/gen" includes="**/*.dat" />
			<fileset dir="${dir.build}/src" includes="**/*.class" />
			<!-- <manifest >
				<attribute name="Main-Class" value="com.interrupt.bookkeeping.cc.bkell.Bkell" />
				<attribute name="Class-Path" value="${dir.lib}/Piccolo.jar  ${dir.lib}/commons-cli-1.0.jar  ${dir.lib}/commons-logging-api.jar  ${dir.lib}/javafind.jar  ${dir.lib}/commons-logging.jar  ${dir.lib}/bob.jar  ${dir.lib}/sablecc.jar  ${dir.lib}/log4j-1.2.7.jar  ${dir.lib}/velocity-1.3.1.jar  ${dir.lib}/velocity-dep-1.3.1.jar  ${dir.lib}/exist-optional.jar  ${dir.lib}/exist-modules.jar  ${dir.lib}/exist.jar  ${dir.lib}/xmldb.jar ${dir.lib}/xmlrpc-1.2-patched.jar xml/ " />
			</manifest>
			-->
		</jar>
		
		
	</target> 
	
	<target name="release-war" depends="init, release" > 
		
		<echo message="Making webkell.war" />
		
		<!-- copy libs to a tempporary flattened directory --> 
		<mkdir dir="temp" /> 
		
		<copy file="/Users/timothyw/Tools/eXist-Aauth/conf.xml" tofile="temp/confAauth.xml" flatten="true" /> 
		<copy file="/Users/timothyw/Tools/eXist-Groups/conf.xml"  tofile="temp/confGroups.xml" flatten="true" />
		<copy todir="temp" flatten="true" > 
			
			<fileset dir="." >
				
				<include name="confAauth.xml"/>
				<!-- <include name="confGroups.xml"/>
				-->
				<include name="xml/bookkeeping.system.xml"/>
				<!-- <include name="xml/default.bookkeeping.xml"/> -->
			</fileset>
			<fileset dir="${dir.lib}" >
				
				<include name="**/*.jar"/>
				<include name="**/*.properties"/>
				<include name="urlrewrite.xml"/>
				
				<exclude name="**/spittoon.properties" />
				<exclude name="**/*servlet*.jar" />
			</fileset>
		</copy> 
		<move file="temp/spittoon.web.properties" tofile="temp/spittoon.properties"/>
		
		<war destfile="${dir.build}/webkell.war" webxml="${dir.lib}/web.xml" >
			
			<fileset dir="webkell" includes="**/*" /> 
			
			
			<zipfileset 
				file="temp/urlrewrite.xml" 
				prefix="WEB-INF" /> 
			
			<zipfileset 
				file="dataGroups/**" 
				prefix="WEB-INF/lib/dataGroups" />
			
			<zipfileset 
				file="dataAauth/**"
				prefix="WEB-INF/lib/dataAauth" />
			
			<zipfileset 
				file="xml/*.xml"
				prefix="WEB-INF/xml" />
            
			<classes dir="${dir.build}/gen" includes="**/*.class" />
			<classes dir="${dir.build}/gen" includes="**/*.dat" />
			<classes dir="${dir.build}/src" includes="**/*.class" />
			<classes dir="temp" includes="*.properties" />
			
			
			<!-- ** TODO Find a better place to put this. an 'xml' directory that can be added to the classpath --> 
			<classes dir="xml/http" includes="**/*.xml" />
			<classes dir="xml" file="xml/bookkeeping.system.xml" />
			<classes dir="xml" file="xml/default.bookkeeping.xml"/>
			
			
			<lib dir="temp" >
				
				<include name="**/*.jar"/>
				<include name="confAauth.xml" />
				<include name="confGroups.xml" />
				
				<exclude name="**/*servlet*.jar" />
			</lib>
			<manifest >
				<attribute name="Class-Path" value="lib/cactus lib/endorsed lib/htmlunit lib/ xml/" />
			</manifest>
		</war>
		
	</target> 
	<target name="deploy-war" depends="release-war" > 
		
		<echo message="Deploying webkell.war" />
		<copy file="${dir.build}/webkell.war" todir="${tomcat.home}/webapps" /> 
		
	</target>
	
	<!-- <target name="cactus-war" depends="init, release-war" > 
		
		<echo message="Updating 'webkell.war' for cactus" />
		
		<!- Adding cactus specific war file ->
		<war destfile="${dir.build}/webkell.war" webxml="${dir.lib}/web.cactus.xml" update="true" />
		
	</target> 
	-->
	
	<target name="release-scratch" depends="init" >
		
		<!-- jar main classes. Jar dependencies and properties files should be zipped into a lib directory
		-->
		<jar destfile="${dir.build}/bookkeeping.jar" >
			
			<fileset dir="${dir.build}/gen" includes="**/*.class" />
			<fileset dir="${dir.build}/gen" includes="**/*.dat" />
			<fileset dir="${dir.build}/src" includes="**/*.class" />
			<fileset dir="." includes="xml/*.xml" />
			<manifest >
				<attribute name="Main-Class" value="com.interrupt.bookkeeping.cc.bkell.Bkell" />
				<attribute name="Class-Path" value="${dir.lib}/Piccolo.jar  ${dir.lib}/commons-cli-1.0.jar  ${dir.lib}/commons-logging-api.jar  ${dir.lib}/javafind.jar  ${dir.lib}/commons-logging.jar  ${dir.lib}/bob.jar  ${dir.lib}/sablecc.jar  ${dir.lib}/log4j-1.2.7.jar  ${dir.lib}/velocity-1.3.1.jar  ${dir.lib}/velocity-dep-1.3.1.jar  ${dir.lib}/exist-optional.jar  ${dir.lib}/exist-modules.jar  ${dir.lib}/exist.jar  ${dir.lib}/xmldb.jar ${dir.lib}/xmlrpc-1.2-patched.jar xml/ " />
			</manifest>
		</jar>
		
		
	</target> 
    
    
</project>


